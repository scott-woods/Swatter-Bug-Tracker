@{
    ViewBag.Title = "Swatter - Dashboard";
}
@model BugTracker.Models.CommonViewModels.TicketProjectModel
<div class="container-fluid">
    <div class="row">
        <div class="col col-6 d-flex p-4">
            <div class="card w-100">
                <div class="card-header">
                    <h4>Tickets by Priority</h4>
                </div>
                <div class="card-body">
                    <canvas id="priorityBarChart"></canvas>
                </div>
            </div>
        </div>
        <div class="col col-6 d-flex p-4">
            <div class="card w-100">
                <div class="card-header">
                    <h4>Tickets by Type</h4>
                </div>
                <div class="card-body">
                    <canvas id="typeChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col col-6 d-flex p-4">
            <div class="card w-100">
                <div class="card-header">
                    <h4>Tickets by Status</h4>
                </div>
                <div class="card-body">
                    <canvas id="statusChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var ctx = document.getElementById('priorityBarChart');
    var ticketPriChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Low', 'Medium', 'High'],
            datasets: [{
                label: '# of Tickets',
                data: [
                    @Model.TicketIndexModel.PriorityCount[Priority.Low],
                    @Model.TicketIndexModel.PriorityCount[Priority.Medium],
                    @Model.TicketIndexModel.PriorityCount[Priority.High]
                ],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.8',
                    'rgba(255, 206, 86, 0.8',
                    'rgba(255, 80, 70, 0.8'
                ],
                borderWidth: 1,
                borderColor: "rgba(2,117,216,1)",
                hoverBorderWidth: 2,
                hoverBorderColor: 'black'
            }]
        },
        options: {
            legend: {
                display: false
            },
            scales: {
                xAxes: {
                    gridLines: {
                        display: false
                    }
                },
                yAxes: [{
                    ticks: {
                        min: 0,
                        maxTicksLimit: 5
                    }
                }]
            }
        }
    });

    var typeChart = document.getElementById('typeChart');
    var ticketTypeChart = new Chart(typeChart, {
        type: 'doughnut',
        data: {
            labels: [
                'Bugs/Errors: ' + @Model.TicketIndexModel.TypeCount[Ticket_Type.Bugs],
                'Feature Requests: ' + @Model.TicketIndexModel.TypeCount[Ticket_Type.Feature_Requests],
                'Other: ' + @Model.TicketIndexModel.TypeCount[Ticket_Type.Other]
                ],
            datasets: [{
                label: '# of Tickets',
                data: [
                    @Model.TicketIndexModel.TypeCount[Ticket_Type.Bugs],
                    @Model.TicketIndexModel.TypeCount[Ticket_Type.Feature_Requests],
                    @Model.TicketIndexModel.TypeCount[Ticket_Type.Other]
                ],
                backgroundColor: [
                    '#dc3545',
                    '#ffc107',
                    '#28a745'
                ],
                borderWidth: 1,
                borderColor: "rgba(2,117,216,1)",
                hoverBorderWidth: 2,
                hoverBorderColor: 'black'
            }]
        },
    });

    var statusChart = document.getElementById('statusChart');
    var ticketStatusChart = new Chart(statusChart, {
        type: 'bar',
        data: {
            labels: ['Open', 'In Progress', 'Resolved'],
            datasets: [{
                label: '# of Tickets',
                data: [
                    @Model.TicketIndexModel.StatusCount[Status.Open],
                    @Model.TicketIndexModel.StatusCount[Status.In_Progress],
                    @Model.TicketIndexModel.StatusCount[Status.Resolved]
                ],
                backgroundColor: "rgba(2,117,216,1)",
                borderWidth: 1,
                borderColor: "rgba(2,117,216,1)",
                hoverBorderWidth: 2,
                hoverBorderColor: 'black'
            }]
        },
        options: {
            legend: {
                display: false
            },
            scales: {
                xAxes: {
                    gridLines: {
                        display: false
                    }
                },
                yAxes: [{
                    ticks: {
                        min: 0,
                        maxTicksLimit: 5
                    }
                }]
            }
        }
    })
</script>